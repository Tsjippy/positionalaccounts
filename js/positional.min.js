(()=>{"use strict";const e=e=>{const t=(e=e.replace(/-/g,"+").replace(/_/g,"/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return window.atob(e)},t=e=>btoa(String.fromCharCode(...e));window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((e=>{e||console.log("No platform authenticator found. If your OS does not come with one, try using devtools to set one up.")})),console.log("Positional accounts script loaded"),document.addEventListener("click",(function(n){n.target.matches(".account-switcher")&&async function(n){let a=n.dataset.accountid,r=n.dataset.nonce,i=Main.showLoader(n);if(await async function(n,a=null){null!=a&&(a.classList.remove("success"),a.classList.remove("error"));try{let r=new FormData;r.append("username",n);let i=await FormSubmit.fetchRestApi("login/auth_start",r);if(!i)throw new Error("Fetching Server Challenge failed");let o=(t=>(t.challenge=Uint8Array.from(e(t.challenge),(e=>e.charCodeAt(0))),void 0!==t.user&&(t.user={...t.user,id:Uint8Array.from(window.atob(t.user.id),(e=>e.charCodeAt(0)))}),void 0!==t.excludeCredentials&&(t.excludeCredentials=t.excludeCredentials.map((t=>({...t,id:Uint8Array.from(e(t.id),(e=>e.charCodeAt(0)))})))),void 0!==t.allowCredentials&&(t.allowCredentials=t.allowCredentials.map((t=>({...t,id:Uint8Array.from(e(t.id),(e=>e.charCodeAt(0)))})))),t))(i);null!=a&&(a.textContent="Waiting for biometric");let s=await navigator.credentials.get({publicKey:o});null!=a&&(a.textContent="Verifying...");const l=(e=>{const n={id:e.id,type:e.type,rawId:t(new Uint8Array(e.rawId)),response:{clientDataJSON:t(new Uint8Array(e.response.clientDataJSON))}};return void 0!==e.response.attestationObject&&(n.response.attestationObject=t(new Uint8Array(e.response.attestationObject))),void 0!==e.response.authenticatorData&&(n.response.authenticatorData=t(new Uint8Array(e.response.authenticatorData))),void 0!==e.response.signature&&(n.response.signature=t(new Uint8Array(e.response.signature))),void 0!==e.response.userHandle&&(n.response.userHandle=t(new Uint8Array(e.response.userHandle))),n})(s);if(r=new FormData,r.append("publicKeyCredential",JSON.stringify(l)),i=await FormSubmit.fetchRestApi("login/auth_finish",r),!i)throw new Error("Verification failed");return null!=a?(a.textContent="Verification successfull",a.classList.add("success")):Main.displayMessage("Verification successfull"),!0}catch(e){return null!=a?(a.textContent=e,a.classList.add("error")):Main.displayMessage(e,"error"),!1}}(a)){let e=new FormData;e.append("switch-account",a),e.append("nonce",r);let t=await FormSubmit.fetchRestApi("positional/switch_account",e);if(t)return Main.displayMessage(t),void(window.location.href=window.location.href)}Main.displayMessage("Please logout and login as the other account.\nMake sure you than setup passkey login for that account.","error");let o=i.closest(".menu-item-has-children");i.remove(),0==o.querySelectorAll("button").length&&o.remove()}(n.target)}))})();
//# sourceMappingURL=positional.min.js.map
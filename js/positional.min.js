(()=>{"use strict";const e=e=>{const t=(e=e.replace(/-/g,"+").replace(/_/g,"/")).length%4;if(t){if(1===t)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");e+=new Array(5-t).join("=")}return window.atob(e)},t=e=>btoa(String.fromCharCode(...e));window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then(e=>{e||console.log("No platform authenticator found. If your OS does not come with one, try using devtools to set one up.")}),console.log("Positional accounts script loaded"),document.addEventListener("click",function(n){n.target.matches(".account-switcher")&&async function(n){let r=n.dataset.accountid,a=n.dataset.nonce,o=Main.showLoader(n);if(await async function(n,r=null){null!=r&&(r.classList.remove("success"),r.classList.remove("error"));try{let a=new FormData;a.append("username",n);let o=await FormSubmit.fetchRestApi("login/auth_start",a);if(!o)throw new Error("Fetching Server Challenge failed");let i=(t=>(t.challenge=Uint8Array.from(e(t.challenge),e=>e.charCodeAt(0)),void 0!==t.user&&(t.user={...t.user,id:Uint8Array.from(window.atob(t.user.id),e=>e.charCodeAt(0))}),void 0!==t.excludeCredentials&&(t.excludeCredentials=t.excludeCredentials.map(t=>({...t,id:Uint8Array.from(e(t.id),e=>e.charCodeAt(0))}))),void 0!==t.allowCredentials&&(t.allowCredentials=t.allowCredentials.map(t=>({...t,id:Uint8Array.from(e(t.id),e=>e.charCodeAt(0))}))),t))(o);null!=r&&(r.textContent="Waiting for biometric");let s=await navigator.credentials.get({publicKey:i});null!=r&&(r.textContent="Verifying...");const l=(e=>{const n={id:e.id,type:e.type,rawId:t(new Uint8Array(e.rawId)),response:{clientDataJSON:t(new Uint8Array(e.response.clientDataJSON))}};return void 0!==e.response.attestationObject&&(n.response.attestationObject=t(new Uint8Array(e.response.attestationObject))),void 0!==e.response.authenticatorData&&(n.response.authenticatorData=t(new Uint8Array(e.response.authenticatorData))),void 0!==e.response.signature&&(n.response.signature=t(new Uint8Array(e.response.signature))),void 0!==e.response.userHandle&&(n.response.userHandle=t(new Uint8Array(e.response.userHandle))),n})(s);let c=document.getElementById("loginform")?document.getElementById("loginform"):void 0;if(a=new FormData(c),a.append("publicKeyCredential",JSON.stringify(l)),o=await FormSubmit.fetchRestApi("login/auth_finish",a),!o)throw new Error("Verification failed");return null!=r?(r.textContent="Verification successfull",r.classList.add("success")):Main.displayMessage("Verification successfull"),!0}catch(e){return console.error(e),null!=r?(r.textContent=e,r.classList.add("error")):Main.displayMessage(e,"error"),!1}}(r)){let e=new FormData;e.append("switch-account",r),e.append("nonce",a);let t=await FormSubmit.fetchRestApi("positional/switch_account",e);if(t)return Main.displayMessage(t),void(window.location.href=window.location.href)}Main.displayMessage("Passkey login for the account failed.\nLogging out...","error"),document.querySelectorAll(".logout").forEach(e=>e.click());let i=o.closest(".menu-item-has-children");o.remove(),0==i.querySelectorAll("button").length&&i.remove()}(n.target)})})();
//# sourceMappingURL=positional.min.js.map